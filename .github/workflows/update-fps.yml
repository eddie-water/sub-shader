name: Update FPS Badge
on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:  # Allow manual triggering
  push:
    paths:
      - 'logs/**'  # Trigger when logs change

jobs:
  update-fps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Extract highest FPS
        id: extract-fps
        run: |
          # Look for all "Loops per second" entries in the log
          if [ -f "logs/subshader.log" ]; then
            # Extract all FPS values and find the highest
            HIGHEST_FPS=$(grep "Loops per second:" logs/subshader.log | awk '{print $NF}' | sort -n | tail -n 1)
            
            # If no FPS found, use a default value
            if [ -z "$HIGHEST_FPS" ]; then
              HIGHEST_FPS="0"
            fi
            
            # Round to 1 decimal place
            FPS_ROUNDED=$(printf "%.1f" $HIGHEST_FPS)
            
            echo "FPS=$FPS_ROUNDED" >> $GITHUB_ENV
            echo "fps=$FPS_ROUNDED" >> $GITHUB_OUTPUT
            
            echo "Highest FPS found: $FPS_ROUNDED"
          else
            echo "FPS=0" >> $GITHUB_ENV
            echo "fps=0" >> $GITHUB_OUTPUT
            echo "No log file found, setting FPS to 0"
          fi
      
      - name: Update FPS Record
        run: |
          # Create or update the FPS record file
          echo "Current highest FPS: ${{ steps.extract-fps.outputs.fps }}" > fps_record.txt
          echo "Last updated: $(date)" >> fps_record.txt
          echo "Source: logs/subshader.log" >> fps_record.txt
      
      - name: Create FPS Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          namedLogo: python
          label: SubShader FPS
          message: ${{ steps.extract-fps.outputs.fps }}
          namedColor: green
          gistID: ${{ secrets.GIST_ID }}
          filename: subshader-fps-badge.json
          logLevel: 1
